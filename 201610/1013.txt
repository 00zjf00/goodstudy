java基础

Java语言是多线程的：
在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。通常有两种方法来创建线程：其一，使用型构为Thread(Runnable)的构造子将一个实现了Runnable接口的对象包装成一个线程，其二，从Thread类派生出子类并重写run方法，使用该子类创建的对象即为线程。值得注意的是Thread类已经实现了Runnable接口，因此，任何一个线程均有它的run方法，而run方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。Java语言支持多个线程的同时执行，并提供多线程之间的同步机制（关键字为synchronized）。


所有的标识符都应该以字母（A-Z或者a-z）,美元符（$）、或者下划线（_）开始*

1 byte = 8 bit

数据类型：
四个整数类型：
byte 8位 ；short 16位 ；int 32位 ；long 64位
浮点型两个：
float：单精度 32位 ；double：双精度 64位
其他两个：
boolean and  char：16位

局部变量是在栈上分配的，没有默认值*******
实例变量：非静态变量，实例变量在对象创建的时候创建，在对象被销毁的时候销毁
类变量：静态变量，在类中以static关键字声明，无论一个类创建了多少个对象，类只拥有类变量的一份拷贝

访问控制符：
默认的，也称为 default，在同一包内可见，不使用任何修饰符。
私有的，以 private 修饰符指定，在同一类内可见。
共有的，以 public 修饰符指定，对所有类可见。
受保护的，以 protected 修饰符指定，对同一包内的类和所有子类可见。*******

访问控制和继承
请注意以下方法继承的规则：
父类中声明为public的方法在子类中也必须为public。
父类中声明为protected的方法在子类中要么声明为protected，要么声明为public。不能声明为private。
父类中声明为private的方法，不能够被继承。

Static：
静态变量：无论一个类实例化多少对象，它的静态变量只有一份拷贝。局部变量不能声明为static
静态方法：静态方法不能使用类的非静态变量。*******

Final：
final变量：能别显示的初始化并且只能初始化一次。
final对象：被声明为final的对象的引用不能指向不同的对象。但是final对象里的数据可以被改变。*******
final方法：final方法可以被子类继承，但是不能被子类修改。*******

Abstract:
抽象类：一个类不能同时被abstract和final修饰。如果一个类包含抽象方法，那么该类一定要声明为抽象类。
抽象方法：抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。抽象方法不能被声明成final和strict。
          任何继承抽象类的子类必须实现父类的所有抽象方法，除非该子类也是抽象类。
          如果一个类包含若干个抽象方法，那么该类必须声明为抽象类。抽象类可以不包含抽象方法。

Synchromized：Synchronized关键字声明的方法同一时间只能被一个线程访问。

Transient：序列化的对象包含被transient修饰的实例变量时，java虚拟机(JVM)跳过该特定的变量。

Volatile ：修饰的成员变量在每次被线程访问时，都强制从共享内存中重新读取该成员变量的值。而且，当成员变量发生变化时，会强制线程将变化值回写到共享内存。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。

位运算符：
＆	按位与操作符，当且仅当两个操作数的某一位都非0时候结果的该位才为1。	
|	按位或操作符，只要两个操作数的某一位有一个非0时候结果的该位就为1。
^	按位异或操作符，两个操作数的某一位不相同时候结果的该位就为1。
~	按位补运算符翻转操作数的每一位。	
<< 	按位左移运算符。左操作数按位左移右操作数指定的位数。	
>> 	按位右移运算符。左操作数按位右移右操作数指定的位数。	
>>> 	按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。

String是不可变的，一旦创建了String对象，那它的值就无法改变了。
StringBuilder方法不是线程安全的（不能同步访问），速度比StringBuffer（线程安全）*******

数组的元素类型和数组的大小都是确定的*******

多态存在的三个必要条件:
继承 ； 重写 ；父类引用指向子类对象

在Java中，类的多重继承是不合法，但接口允许多重继承
==========================================================================================================================================

Scala
变量声明：用var
var myVar ： String =""
常量声明：用val
val myVar ： String=""

如果没有指定访问修饰符符，默认情况下，Scala对象的访问级别都是 public。
Scala 中的 private 限定符，比 Java 更严格，在嵌套类情况下，外层类甚至不能访问被嵌套类的私有成员。
Protected:只允许保护成员在定义了该成员的的类的子类中被访问。同一个包里也不可以访问。

scala 中没有 static 关键字

所以 对于一个class来说，所有的方法和成员变量在实例被 new 出来之前都是无法访问的,class文件中的main方法也就没什么用了

scala object 中所有成员变量和方法默认都是 static 的,可以直接访问main方法

方法定义由一个def 关键字开始，紧接着是可选的参数列表，一个冒号"：" 和方法的返回类型，一个等于号"="，最后是方法的主体。
如果函数没有返回值，可以返回为 Unit，这个类似于 Java 的 void

柯里化(Currying)指的是将原来接受两个参数的函数变成新的接受一个参数的函数的过程。新的函数返回一个以原有第二个参数为参数的函数。

for循环：Range 可以是一个数字区间表示 i to j ，或者 i until j（不包含j）。左箭头 <- 用于为变量 x 赋值。
