问题（《编程之美》4.3买票找零）：2n个人排队买票，其中n个人持50元，n个人持100元。每张票50元，且一人只买一张票。初始时售票处没有零钱找零。请问这2n个人一共有多少种排队顺序，不至于使售票处找不开钱？

分析1：队伍的序号标为0,1,...,2n-1,并把50元看作左括号，100元看作右括号，合法序列即括号能完成配对的序列。对于一个合法的序列，第0个一定是左括号，它必然与某个右括号配对，记其位置为k。那么从1到k-1、k+1到2n-1也分别是两个合法序列。那么，k必然是奇数（1到k-1一共有偶数个），设k=2i+1。那么剩余括号的合法序列数为f(2i)*f(2n-2i-2)个。取i=0到n-1累加，
并且令f(0)=1，再由组合数C(0,0)=0,可得f(2n)


某个城市的某个居民，每天他须要走过2n个街区去上班（他在其住所以北n个街区和以东n个街区处工作）。如果他不跨越（但可以碰到）从家到办公室的对角线，那么有多少条可能的道路？



为了不跨越对角线，向东走的步数时刻要大于等于向北走的步数，这些点都是处于对角线以下的。可以看出路线序列由n次向东和n次向北组成，且从第一个元素开始的任意子序列中向东次数不少于向北次数。因此方法一共是f(2n)种。